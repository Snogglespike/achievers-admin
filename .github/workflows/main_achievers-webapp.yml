# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - achievers-admin

permissions:
  id-token: write

on:
  push:
    branches:
      - main

jobs:
  e2etests:
    name: End to end tests
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: achievers
      DB_USER: root
      DB_PASSWORD: my-secret-pw
      WEB_APP_URL: "https://achievers-webapp.azurewebsites.net"

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_EXTRA_FLAGS: "--lower-case-table-names=1"
        ports:
          - "3306:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Set up DB
        run: mysql -h 127.0.0.1 --port 3306 -u ${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Migrate DB
        env:
          DATABASE_URL: mysql://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@127.0.0.1:3306/${{ env.DB_DATABASE }}
        run: |
          npx prisma generate
          npx prisma migrate deploy
          npx prisma db seed
      - name: Install E2E
        run: npx playwright install --with-deps chromium
      - name: E2E
        env:
          DATABASE_URL: mysql://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@127.0.0.1:3306/${{ env.DB_DATABASE }}
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          TENANT_ID: ${{ secrets.TENANT_ID }}
          REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
          OBJECT_ID: ${{ secrets.OBJECT_ID }}
        run: npm run test:e2e
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  migrate:
    name: Migrate and Seed Production
    runs-on: ubuntu-latest
    needs: e2etests
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      TENANT_ID: ${{ secrets.TENANT_ID }}
      REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
      OBJECT_ID: ${{ secrets.OBJECT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test:ci
      - name: Migrate
        run: npm run setup

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: migrate

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run semantic-release

  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: duvet86/achievers-app:latest, duvet86/achievers-app:${{ steps.package-version.outputs.current-version}}

  deploy:
    name: ðŸš€ Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: ðŸ›‘ Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        with:
          app-name: "achievers-webapp"
          slot-name: "production"
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_eaa9bb9acdc84aa8bd682ef8d6a3a78a }}
          images: duvet86/achievers-app:latest

  restart-app:
    name: Restart Web App
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Run az commands"
        run: az webapp restart --name achievers-webapp --resource-group achievers-rg
